#pragma once
//
// File: leg_pos.cpp
//
// MATLAB Coder version            : 23.2
// C/C++ source code generated on  : 30-Mar-2024 23:08:59
//

// Include Files
#include <arm_math.h>
#include <cmath>
namespace app::observer {
// Function Definitions
//
// LEG_POS
//     POS = LEG_POS(PHI1,PHI4)
//
//  _ _ ______
//   4*/    1*\
//     \      /
//      \    /
//
// Arguments    : double phi1 均为与后侧水平方向
//                double phi4
//                double pos[2] 长度和角度 [l0; theta]
// Return Type  : void
//新腿
void leg_pos(double phi1, double phi4, double pos[2]) {
    double a;
    double t19;
    double t2;
    double t21;
    double t3;
    double t4;
    double t5;
    double t7;
    double t9;
    //     This function was generated by the Symbolic Math Toolbox version 23.2.
    //     2025-02-28 07:24:21
    t2  = std::cos(phi1);
    t3  = std::cos(phi4);
    t4  = std::sin(phi1);
    t5  = std::sin(phi4);
    t7  = t2 * 0.1525;
    t9  = t4 * 0.1525;
    a   = t5 * 0.11 - t9;
    t19 = a * a;
    a   = (t3 * 0.11 - t7) + 0.17;
    t21 = a * a;
    a   = (t19 + t21) - 0.0369;
    t2  = std::atan(
             1.0 / ((((t3 * 0.0352 - t2 * 0.0488) + t19) + t21) + 0.0175)
             * ((t5 * 0.0352 - t4 * 0.0488) + std::sqrt((t19 * 0.1024 + t21 * 0.1024) - a * a)))
       * 2.0;
    t3     = t9 + std::sin(t2) * 0.26;
    t2     = (t7 + std::cos(t2) * 0.26) - 0.085;
    pos[0] = std::sqrt(t3 * t3 + t2 * t2);
    pos[1] = 1.5707963267948966 - std::atan2(t3, t2);
}
//
// File trailer for leg_pos.cpp
//
// [EOF]
//
} // namespace app