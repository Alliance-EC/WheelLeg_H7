#pragma once
//
// File: leg_conv_reverse.cpp
//
// MATLAB Coder version            : 23.2
// C/C++ source code generated on  : 30-Mar-2024 23:31:54
//

// Include Files
#include <arm_math.h>
#include <cmath>
namespace app::observer {
// STM32优化版
//  Function Definitions
//
//  LEG_CONV_REVERSE
//      T_r = LEG_CONV_REVERSE(T1,T2,PHI1,PHI4)
//
//      T2    T1
//    _ _ ______
//    4* /    1*\
//       \      /
//        \    /
//
//  Arguments    : float T1
//                 float T2
//                 float phi1
//                 float phi4
//                 float T_r[2]  [F; Tp]
//  Return Type  : void
//
void leg_conv_reverse(double T1, double T2, double phi1, double phi4, double T_r[2]) {
    double t2;
    double t20;
    double t21;
    double t23;
    double t26;
    double t3;
    double t4;
    double t49_re_tmp;
    double t5;
    double t6;
    double t7;
    //     This function was generated by the Symbolic Math Toolbox version 23.2.
    //     2024-07-15 23:13:02
    t2  = std::cos(phi1);
    t3  = std::cos(phi4);
    t4  = std::sin(phi1);
    t5  = std::sin(phi4);
    t6  = t2 * 0.148;
    t7  = t3 * 0.148;
    t20 = t4 * 0.148 - t5 * 0.148;
    t23 = (t7 - t6) + 0.14;
    t21 = t20 * t20;
    t23 *= t23;
    t26 = t21 + t23;
    t2  = std::atan(
             1.0 / (((t3 * 0.07844 - t2 * 0.07844) + t26) + 0.0742)
             * ((t5 * 0.07844 - t4 * 0.07844)
                + std::sqrt((t21 * 0.2809 + t23 * 0.2809) - t26 * t26)))
       * 2.0;
    t23        = std::sin(t2);
    t26        = std::cos(t2) * 0.265;
    t21        = std::sin(phi1 - t2);
    t49_re_tmp = (t6 + t26) - 0.07;
    t4         = t4 * 0.148 + t23 * 0.265;
    t3         = std::atan2(t4, t49_re_tmp);
    t23        = std::atan((t20 + t23 * 0.265) * (1.0 / (((t6 - t7) + t26) - 0.14)));
    t5         = t2 - t3;
    t3         = -t3 + t23;
    t23        = std::sin(phi4 - t23);
    t2         = 1.0 / t21 * (1.0 / t23);
    t26        = T2 * t21;
    t23 *= T1;
    T_r[0] = t2 * (t26 * std::cos(t3) * 0.148 + t23 * std::cos(t5) * 0.148) * -45.653761869978091;
    T_r[1] = t2 * (t26 * std::sin(t3) * 0.148 + t23 * std::sin(t5) * 0.148)
           * std::sqrt(t4 * t4 + t49_re_tmp * t49_re_tmp) * -45.653761869978091;
}

//
// File trailer for leg_conv_reverse.cpp
//
// [EOF]
//
} // namespace app::observer